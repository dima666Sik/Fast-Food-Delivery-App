server:
  port: 8080

spring:
  application:
    name: gateway-oauth-service
  cloud:
    gateway:
      discovery:
        locator:
          lower-case-service-id: true
          enabled: true
      routes:
        - id: product-service-route
          uri: lb://product-service
          predicates:
            - Path=/product-service/**

        - id: order-service-route
          uri: lb://order-service
          predicates:
            - Path=/order-service/**

        - id: searcher-service-route
          uri: lb://searcher-service
          predicates:
            - Path=/searcher-service/**

        - id: credit-card-service-route
          uri: lb://credit-card-service
          predicates:
            - Path=/credit-card-service/**

        - id: email-sender-service-route
          uri: lb://email-sender-service
          predicates:
            - Path=/email-sender-service/**

        - id: chat-gpt-service-route
          uri: lb://chat-gpt-service
          predicates:
            - Path=/chat-gpt-service/**
  #      routes:
  #        - id: searcher-service-route
  #          uri: lb://searcher-service
  #          predicates:
  #            - Path=/api/search/**
  #          filters:
  #            - RewritePath=/api/search/(?<remaining>.*), /api/${remaining}

  config:
    import:
      - .env[.properties]

  r2dbc:
    url: ${R2DBC_URL}
    username: ${USER_NAME_DB}
    password: ${PASSWORD_DB}

  #Liquibase configuration
  liquibase:
    url: ${JDBC_URL}
    user: ${USER_NAME_DB}
    password: ${PASSWORD_DB}
    enabled: true


#Eureka configuration
eureka:
  client:
    service-url:
      defaultZone: ${DEFAULT_ZONE_EUREKA}

#JWT token configuration
back-end:
  security:
    jwt:
      secret-key: ${SECRET_KEY}
      access:
        expiration: ${JWT_ACCESS_EXPIRATION}
      refresh:
        expiration: ${JWT_REFRESH_EXPIRATION}
  urls:
    url-all-images: ${URL_ALL_IMAGES}
#Frontend uri
front-end:
  uri: ${FRONT_END_URI}

#Logging configuration
logging:
  level:
    org:
      springframework:
        r2dbc: DEBUG
    liquibase: DEBUG
#  server:
#    max-threads-for-peer-replication: 0
#    enableSelfPreservation: false

#  config:
#    import: optional:consul:/
#  config:
#    import:
##      - .env[.properties]
#      - optional:consul:/
#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            client-id: ${GOOGLE_CLIENT_ID}
#            client-secret: ${GOOGLE_CLIENT_SECRET}
#            redirect-uri: ${GOOGLE_REDIRECT_URI}
#            scope:
#              - openid
#              - email
#              - profile

#        enabled: true
#        register: true
#        health-check-path: /health-check
#    loadbalancer:
#      enabled: false

#    gateway:
#      discovery:
#        locator:
#          enabled: true
#          lower-case-service-id: true
#      routes:
#        - id: searcher-service-route
#          uri: lb://searcher-service
#          predicates:
#            - Path=/api/search/**
#          filters:
#            - RewritePath=/api/search/(?<remaining>.*), /api/${remaining}
#


#resilience4j:
#  circuitbreaker:
#    instances:
#      services:
#        wait-duration-in-open-state: 10s
#        failure-rate-threshold: 60
#        slow-call-duration-threshold:
#          - 2s
#        minimum-number-of-calls: 3
#        permitted-number-of-calls-in-half-open-state: 1