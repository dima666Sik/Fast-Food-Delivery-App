server:
  port: 8080

spring:
  application:
    name: gateway-oauth-service
  cloud:
   gateway:
     discovery:
       locator:
         lower-case-service-id: true
         enabled: true


eureka:
  client:
    service-url:
      defaultZone: http://localhost:8083/eureka/

#  server:
#    max-threads-for-peer-replication: 0
#    enableSelfPreservation: false

#  config:
#    import: optional:consul:/
#  config:
#    import:
##      - .env[.properties]
#      - optional:consul:/
#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            client-id: ${GOOGLE_CLIENT_ID}
#            client-secret: ${GOOGLE_CLIENT_SECRET}
#            redirect-uri: ${GOOGLE_REDIRECT_URI}
#            scope:
#              - openid
#              - email
#              - profile

#        enabled: true
#        register: true
#        health-check-path: /health-check
#    loadbalancer:
#      enabled: false

#    gateway:
#      discovery:
#        locator:
#          enabled: true
#          lower-case-service-id: true
#      routes:
#        - id: searcher-service-route
#          uri: lb://searcher-service
#          predicates:
#            - Path=/api/search/**
#          filters:
#            - RewritePath=/api/search/(?<remaining>.*), /api/${remaining}
#
#  datasource:
#    url: jdbc:postgresql://postgres:5433/users_info_db
#    username: dimasik666
#    password: password

#  jpa:
#    show-sql: true
#    database: postgresql
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    hibernate:
##      ddl-auto: validate
#      ddl-auto: update
#
#  liquibase:
#    enabled: false

#resilience4j:
#  circuitbreaker:
#    instances:
#      services:
#        wait-duration-in-open-state: 10s
#        failure-rate-threshold: 60
#        slow-call-duration-threshold:
#          - 2s
#        minimum-number-of-calls: 3
#        permitted-number-of-calls-in-half-open-state: 1